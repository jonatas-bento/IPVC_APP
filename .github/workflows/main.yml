name: Build and Deploy .NET MAUI Android App

on:
  push:
    branches:
      - main  # Runs when code is pushed to main branch
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: self-hosted

    steps:
    
      # âœ… Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # âœ… Step 2: Setup .NET SDK
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x
          
      # âœ… Step 3: Install Android SDK & Accept Licenses (WITH SUDO)
      - name: Install Android SDK
        run: |
          export ANDROID_HOME=$HOME/android-sdk
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
      
          # ðŸ”¹ Ensure proper ownership & permissions
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S mkdir -p $ANDROID_HOME/cmdline-tools
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S chown -R $USER:$USER $ANDROID_HOME
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S chmod -R 777 $ANDROID_HOME
      
          # ðŸ”¹ Install dependencies
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S apt update
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S apt install unzip -y
      
          # ðŸ”¹ Download & extract SDK tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          unzip -o commandlinetools-linux-10406996_latest.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
      
          # ðŸ”¹ Accept licenses
          echo -e "y\ny\ny\ny\ny\ny\n" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
      
          # ðŸ”¹ Install required components
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "platforms;android-30" \
            "platforms;android-33" \
            "build-tools;30.0.3" \
            "build-tools;33.0.2"


      # âœ… Step 4: Install .NET MAUI Workloads (WITH SUDO)
      - name: Install .NET MAUI Workloads
        run: |
          export DOTNET_ROOT=/usr/share/dotnet
          export PATH=$DOTNET_ROOT:$PATH
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S $DOTNET_ROOT/dotnet workload install maui-android
      
      # âœ… Step 5: Restore Dependencies
      - name: Restore Dependencies
        run: |
          export DOTNET_ROOT=/usr/share/dotnet
          export PATH=$DOTNET_ROOT:$PATH
          dotnet restore
      
      # âœ… Step 6: Decode Keystore for Signing
      - name: Decode Keystore
        run: echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > $HOME/android_keystore.jks
      
      # âœ… Step 7: Build & Sign the App (WITH SUDO)
      - name: Build Signed Android App Bundle
        run: |
          export DOTNET_ROOT=/usr/share/dotnet
          export PATH=$DOTNET_ROOT:$PATH
          export ANDROID_HOME=$HOME/android-sdk
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
      
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S $DOTNET_ROOT/dotnet publish --configuration Release --no-restore \
            -f net7.0-android \
            -p:AndroidSdkDirectory=$ANDROID_HOME \
            -p:AndroidNdkDirectory=$ANDROID_HOME/ndk \
            -p:AndroidSdkPlatformToolsVersion=30.0.3 \
            -p:PublishTrimmed=false \
            -p:RunAOTCompilation=false \
            -p:AndroidPackageFormat=aab \
            -p:AndroidKeyStore=True \
            -p:AndroidSigningKeyStore=$HOME/android_keystore.jks \
            -p:AndroidSigningStorePass=${{ secrets.KEYSTORE_PASSWORD }} \
            -p:AndroidSigningKeyAlias=${{ secrets.KEY_ALIAS }} \
            -p:AndroidSigningKeyPass=${{ secrets.KEY_PASSWORD }}
      
           # âœ… Step 8: Fix File Permissions Before Upload
      - name: Fix Permissions for AAB File
        run: |
          chmod -R 777 $HOME/actions-runner/_work/IPVC_APP/IPVC_APP/IPBVC_App/bin/Release/net7.0-android/

      # âœ… Step 9: Upload AAB as Artifact
      - name: Upload AAB as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: "**/*.aab"
      
      # ðŸ”¹ OPTIONAL: Deploy to Google Play
  deploy:
        needs: build
        runs-on: self-hosted
        steps:
          - name: Download AAB Artifact
            uses: actions/download-artifact@v4
            with:
              name: release-aab
              path: app-release.aab
      
          - name: Upload to Google Play
            uses: r0adkll/upload-google-play@v1
            with:
              serviceAccountJson: ${{ secrets.GOOGLE_PLAY_JSON }}
              packageName: "com.companyname.ipbvc_app"
              releaseFiles: "app-release.aab"
              track: production
              status: completed

